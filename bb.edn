{:min-bb-version "0.9.159"
 :paths ["bb"]
 :deps {markdown-clj/markdown-clj {:mvn/version "1.11.7"}}
 :tasks
 {:requires
  ([tasks :as t]
   [clojure.string :as str]
   [babashka.process :as p]
   [markdown.core :as md]
   [babashka.fs :as fs]
   [babashka.cli :as cli])

  npm-install {:doc "Installs and updates npm dependencies"
               :task (shell "npm install")}

  build-posts {:doc "Build posts"
               :task (t/build-posts)}

  watch:cljs {:doc "Start blog in watch mode"
              #_#_:task (apply clojure "-X:build:test:sci:demo:dev" *command-line-args*)
              :depends [build-posts]}

  #_#_lint {:doc "Lints project using clj-kondo"
            :task (apply shell "clj-kondo --lint src test" *command-line-args*)}

  #_#_jar {:doc "Build jar"
           :task (do
                   (println "Building jar")
                   (clojure "-T:build jar"))}

  #_#_install-jar {:doc "Installs jar for local testing"
                   :task (clojure "-T:build install")}

  #_#_publish {:doc "Prepares repo for publishing via CI"
               :task (t/publish)}
  nrepl
  {:requires ([babashka.fs :as fs]
              [babashka.nrepl.server :as srv])
   :task (do (srv/start-server! {:host "localhost"
                                 :port 1339})
             (spit ".nrepl-port" "1339")
             (-> (Runtime/getRuntime)
                 (.addShutdownHook
                  (Thread. (fn [] (fs/delete ".nrepl-port")))))
             (deref (promise)))}

  -current-tag (->> (shell {:out :string} "git tag --points-at HEAD")
                    :out
                    str/trim
                    not-empty)

  -current-branch (->> (shell {:out :string} "git branch --show-current")
                       :out
                       str/trim)

  ci:publish {:doc "Publish task which will be run on CI"
              :depends [-current-tag -current-branch]
              :task (do
                      (prn :current-tag -current-tag)
                      (prn :current-branch -current-branch)
                      (if (and -current-tag (= "main" -current-branch))
                        (do
                          (println "Deploying to clojars")
                          (clojure "-T:build deploy"))
                        ;; still build jar with updated commit count for artifact upload
                        (do
                          (run 'update-meta)
                          (run 'jar))))}}}
